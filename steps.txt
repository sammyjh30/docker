//On Mac
- Install Brew
- Brew install docker
- Brew install docker-machine
- In Managed Software Centre install Oracle VM VirtualBox


03 - https://stackoverflow.com/questions/35046165/how-do-i-switch-between-active-docker-machines-on-osx/35046166#35046166
04 - https://medium.com/codingthesmartway-com-blog/docker-beginners-guide-part-1-images-containers-6f3507fffc98
if 04 doesn't connect to the daemon, open a new terminal, set up the environment variables and run again

06 - To test: docker inspect -f {{.HostConfig.RestartPolicy}} overlord

07 https://stackoverflow.com/questions/17157721/how-to-get-a-docker-containers-ip-address-from-the-host/54145683
https://docs.docker.com/config/formatting/

08 https://stackoverflow.com/questions/35689628/starting-a-shell-in-the-docker-alpine-container

09 - First  install the debian image via docker run -it debian. 
https://stackoverflow.com/questions/29732990/installing-a-gcc-compiler-onto-a-docker-container/37130833#37130833
https://www.cyberciti.biz/faq/debian-linux-install-gnu-gcc-compiler/
To test :
$ whereis gcc git
$ gcc -v
$ git --version

C code: echo -e "#include <unistd.h>\nint main(void){\nwrite(1, \"Y\", 1);\nreturn 1;}" >> test3.c

10 - https://docs.docker.com/engine/reference/commandline/volume_create/
check: docker volume ls

14 - https://www.ionos.com/community/server-cloud-infrastructure/docker/deploying-wordpress-in-docker-containers/
bash into the container, run mysql with password, show tables

docker exec -it spawning-pool bin/bash
mysql -p
Kerrigan
show databases;


19 -  Its syntax is as follows: [port we want on our machine]:[port we want to retrieve in the container]
Yes, remember that all machines are sub systems and you can connect to them via their IP. But their services arent exposed. By linking the services to a port on the machine you are exposing the services thus able to use them via the ip of the machine and the port.
Check Flask is installed: docker exec Abathur pip install Flask

22 - https://docs.docker.com/engine/reference/commandline/swarm_join/
To get token: https://docs.docker.com/engine/reference/commandline/swarm_join-token/
ssh - https://www.callicoder.com/docker-machine-swarm-stack-golang-example/
To check: docker node ls



23 - https://docs.docker.com/engine/reference/commandline/network_create/
to check : docker network ls

24 - https://www.erlang-solutions.com/blog/scaling-rabbitmq-on-a-coreos-cluster-through-docker.html
https://hub.docker.com/_/rabbitmq/
To check - docker service ls

26 - https://docs.docker.com/engine/reference/commandline/service_create/
https://hub.docker.com/r/42school/engineering-bay

30 - https://docs.docker.com/engine/reference/commandline/service_scale/

31 - https://stackoverflow.com/questions/49538037/how-to-remove-all-services-in-docker-swarm

33 - https://tecadmin.net/remove-docker-images-and-containers/




01 - Dockerfiles

ex00) https://takacsmark.com/dockerfile-tutorial-by-example-dockerfile-best-practices-2018/
https://forums.docker.com/t/install-vim-in-docker-container-on-creation/60296

https://github.com/VBrazhnik/docker-1/wiki/Dockerfiles

02 -ubuntu/debian image -> install teamspeak server

https://terminal28.com/how-to-install-and-configure-teamspeak3-server-linux-debian-ubuntu/




Change gitlab port above 123, gitlab shell, expose port
configure ssh daemon and client to work on same port

https://docs.gitlab.com/omnibus/docker/